<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>statistics on Sahir&#39;s blog</title>
    <link>https://sahirbhatnagar.github.io/blog/tags/statistics/</link>
    <description>Recent content in statistics on Sahir&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Nov 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sahirbhatnagar.github.io/blog/tags/statistics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Standard errors for cross-validated precision macro</title>
      <link>https://sahirbhatnagar.github.io/blog/2021/11/11/standard-errors-for-cross-validated-precision-macro/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sahirbhatnagar.github.io/blog/2021/11/11/standard-errors-for-cross-validated-precision-macro/</guid>
      <description>Simulation function â€“ response is a quadratic function of continuous predictor sim_quadratic_logistic_data = function(sample_size = 25) { x = rnorm(n = sample_size) eta = -1.5 + 0.5 * x + x ^ 2 + rnorm(sample_size, sd = 2) # add some noise p = 1 / (1 + exp(-eta)) y = rbinom(n = sample_size, size = 1, prob = p) data.frame(y.factor = factor(y, levels = 1:0, labels = c(&amp;quot;COPD&amp;quot;,&amp;quot;control&amp;quot;)), x = x, y = y) }  Fit once to see what the resulting predicted curve looks like set.</description>
    </item>
    
    <item>
      <title>Limma Moderated and Ordinary t-statistics</title>
      <link>https://sahirbhatnagar.github.io/blog/2017/02/07/limma-moderated-and-ordinary-t-statistics/</link>
      <pubDate>Tue, 07 Feb 2017 15:09:00 +0000</pubDate>
      
      <guid>https://sahirbhatnagar.github.io/blog/2017/02/07/limma-moderated-and-ordinary-t-statistics/</guid>
      <description>&lt;p&gt;When analyzing large amounts of genetic and genomic data, the first line of analysis is usually some sort of univariate test. That is, conduct a statistical test for each SNP or CpG site or Gene and then correct for multiple testing. The &lt;a href=&#34;https://bioconductor.org/packages/release/bioc/html/limma.html&#34;&gt;limma&lt;/a&gt; package on Bioconductor is a popular method for computing &lt;em&gt;moderated&lt;/em&gt; t-statistics using a combination of the &lt;code&gt;limma::lmFit&lt;/code&gt; and &lt;code&gt;limma::eBayes&lt;/code&gt; functions. In this post, I show how to calculate the &lt;em&gt;ordinary&lt;/em&gt; t-statistics from &lt;code&gt;limma&lt;/code&gt; output.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Statistical Power in t tests with Unequal Group Sizes</title>
      <link>https://sahirbhatnagar.github.io/blog/2016/02/25/statistical-power-in-t-tests-with-unequal-group-sizes/</link>
      <pubDate>Thu, 25 Feb 2016 15:09:00 +0000</pubDate>
      
      <guid>https://sahirbhatnagar.github.io/blog/2016/02/25/statistical-power-in-t-tests-with-unequal-group-sizes/</guid>
      <description>&lt;p&gt;When performing &lt;a href=&#34;https://en.wikipedia.org/wiki/Student%27s_t-test&#34;&gt;Student&amp;rsquo;s t-test&lt;/a&gt; to compare difference in means between two group, it is a useful exercise to determine the effect of unequal sample sizes in the comparison groups on power. Large imbalances generally will not have adequate statistical power to detect even large effect sizes associated with a factor, leading to a high Type II error rate as shown in the figure below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sahirbhatnagar.github.io/blog/figure/posts/2016-02-25-power_ttest_sample_size/unnamed-chunk-2-1.png&#34; alt=&#34;plot of chunk unnamed-chunk-2&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>